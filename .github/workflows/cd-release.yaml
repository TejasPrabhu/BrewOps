name: Continuous Deployment Release

on:
  push:
    branches:
      - release

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          if ! docker --version; then
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker is already installed."
          fi

      - name: Log in to Docker Hub with sudo
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | sudo docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image with sudo
        run: |
          sudo docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/coffee-project-${{ github.ref_name }}:${{ github.sha }} -f ./coffee_project/Dockerfile ./coffee_project

      - name: Scan the Docker image with Trivy and output results
        continue-on-error: true
        run: |
          docker pull aquasec/trivy:latest
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/.cache:/root/.cache aquasec/trivy:latest image --format table --exit-code 0 --no-progress ${{ secrets.DOCKERHUB_USERNAME }}/coffee-project-${{ github.ref_name }}:${{ github.sha }} | tee trivy-report.txt

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-report
          path: trivy-report.txt

      - name: Push Docker image with sudo
        run: |
          sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/coffee-project-${{ github.ref_name }}:${{ github.sha }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.23.6"
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kube config
        run: aws eks update-kubeconfig --name devops-release

      - name: Replace image tag in the Kubernetes deployment file
        run: |
          sed -i 's|${IMAGE_TAG}|'"${{ github.sha }}"'|' ./k8s/deployment-release-canary.yaml
          sed -i 's|${IMAGE_TAG}|'"${{ secrets.STABLE_VERSION  }}"'|' ./k8s/deployment-release-stable.yaml
          sed -i 's|${REPO_NAME}|'"coffee-project-${{ github.ref_name }}"'|' ./k8s/deployment-release-canary.yaml
          sed -i 's|${REPO_NAME}|'"coffee-project-${{ github.ref_name }}"'|' ./k8s/deployment-release-stable.yaml
          sed -i 's|${CANARY_REPLICAS}|'"1"'|' ./k8s/deployment-release-canary.yaml
          sed -i 's|${STABLE_REPLICAS}|'"3"'|' ./k8s/deployment-release-stable.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment-release-canary.yaml
          kubectl apply -f k8s/deployment-release-stable.yaml
          kubectl apply -f k8s/service-prod.yaml

      - name: Get External IP of LoadBalancer
        run: |
          IP=$(kubectl get svc coffee-app-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "LoadBalancer External IP: $IP"
